{"version":3,"sources":["02-clock/script.js"],"names":["START_DEGREE","MINUTE_CHANGE","rotateElement","element","degree","trasitionDuration","style","transitionDuration","transform","setSecondHand","date","hand","document","querySelector","getSeconds","setMinuteHand","getMinutes","setHourHand","getHours","setDate","playTick","seconds","audioMinute","Audio","play","audioFirst","audioSecond","setInterval","now","Date"],"mappings":";;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA,IAAMA,eAAe,EAArB;AACA,IAAMC,gBAAgB,CAAtB;;AAEA,IAAMC,gBAAgB,SAAhBA,aAAgB,CAACC,OAAD,EAAUC,MAAV,EAAqB;AACzC,MAAMC,oBAAoBD,UAAUJ,YAAV,GAAyB,CAAzB,GAA6B,GAAvD;AACAG,UAAQG,KAAR,CAAcC,kBAAd,GAAsCF,iBAAtC;;AAEAF,UAAQG,KAAR,CAAcE,SAAd,eAAoCJ,MAApC;AACD,CALD;;AAOA,IAAMK,gBAAgB,SAAhBA,aAAgB,CAACC,IAAD,EAAU;AAC9B,MAAMC,OAAOC,SAASC,aAAT,CAAuB,cAAvB,CAAb;AACA,MAAMT,SAASM,KAAKI,UAAL,KAAoB,EAApB,GAAyB,GAAzB,GAA+Bd,YAA9C;AACAE,gBAAcS,IAAd,EAAoBP,MAApB;AACD,CAJD;;AAMA,IAAMW,gBAAgB,SAAhBA,aAAgB,CAACL,IAAD,EAAU;AAC9B,MAAMC,OAAOC,SAASC,aAAT,CAAuB,cAAvB,CAAb;AACA,MAAMT,SAASM,KAAKM,UAAL,KAAoB,EAApB,GAAyB,GAAzB,GAA+BhB,YAA9C;AACAE,gBAAcS,IAAd,EAAoBP,MAApB;AACD,CAJD;;AAMA,IAAMa,cAAc,SAAdA,WAAc,CAACP,IAAD,EAAU;AAC5B,MAAMC,OAAOC,SAASC,aAAT,CAAuB,YAAvB,CAAb;AACA,MAAMT,SAASM,KAAKQ,QAAL,KAAkB,EAAlB,GAAuB,GAAvB,GAA6BlB,YAA5C;AACAE,gBAAcS,IAAd,EAAoBP,MAApB;AACD,CAJD;;AAMA,IAAMe,UAAU,SAAVA,OAAU,CAACT,IAAD,EAAU;AACxBD,gBAAcC,IAAd;AACAK,gBAAcL,IAAd;AACAO,cAAYP,IAAZ;AACD,CAJD;;AAMA,IAAMU,WAAW,SAAXA,QAAW,CAACV,IAAD,EAAU;AACzB,MAAMW,UAAUX,KAAKI,UAAL,EAAhB;;AAEA,MAAIO,YAAYpB,aAAhB,EAA+B;AAC7B,QAAMqB,cAAc,IAAIC,KAAJ,uBAApB;AACAD,gBAAYE,IAAZ;AACD,GAHD,MAGO,IAAIH,UAAU,CAAd,EAAiB;AACtB,QAAMI,aAAa,IAAIF,KAAJ,uBAAnB;AACAE,eAAWD,IAAX;AACD,GAHM,MAGA;AACL,QAAME,cAAc,IAAIH,KAAJ,uBAApB;AACAG,gBAAYF,IAAZ;AACD;AACF,CAbD;;AAeAG,YAAY,YAAM;AAChB,MAAMC,MAAM,IAAIC,IAAJ,EAAZ;;AAEAV,UAAQS,GAAR;AACAR,WAASQ,GAAT;AACD,CALD,EAKG,IALH","file":"script.b3d7beb2.map","sourcesContent":["import pathAudio1 from './sounds/vitas-ahahah.wav';\nimport pathAudio2 from './sounds/vitas-hahaha.wav';\nimport pathAudioMinute from './sounds/vitas-blblbl.wav';\nimport './style.css';\n\nconst START_DEGREE = 90;\nconst MINUTE_CHANGE = 0;\n\nconst rotateElement = (element, degree) => {\n  const trasitionDuration = degree == START_DEGREE ? 0 : 0.1;\n  element.style.transitionDuration = `${trasitionDuration}s`;\n\n  element.style.transform = `rotate(${degree}deg)`;\n}\n\nconst setSecondHand = (date) => {\n  const hand = document.querySelector('.second-hand');\n  const degree = date.getSeconds() / 60 * 360 + START_DEGREE;\n  rotateElement(hand, degree);\n}\n\nconst setMinuteHand = (date) => {\n  const hand = document.querySelector('.minute-hand');\n  const degree = date.getMinutes() / 60 * 360 + START_DEGREE;\n  rotateElement(hand, degree);\n}\n\nconst setHourHand = (date) => {\n  const hand = document.querySelector('.hour-hand');\n  const degree = date.getHours() / 12 * 360 + START_DEGREE;\n  rotateElement(hand, degree);\n}\n\nconst setDate = (date) => {\n  setSecondHand(date);\n  setMinuteHand(date);\n  setHourHand(date);\n}\n\nconst playTick = (date) => {\n  const seconds = date.getSeconds();\n\n  if (seconds === MINUTE_CHANGE) {\n    const audioMinute = new Audio(pathAudioMinute);\n    audioMinute.play();\n  } else if (seconds % 2) {\n    const audioFirst = new Audio(pathAudio1);\n    audioFirst.play();\n  } else {\n    const audioSecond = new Audio(pathAudio2);\n    audioSecond.play();\n  }\n}\n\nsetInterval(() => {\n  const now = new Date();\n\n  setDate(now);\n  playTick(now);\n}, 1000);"]}